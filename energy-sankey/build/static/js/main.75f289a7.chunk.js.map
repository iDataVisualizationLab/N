{"version":3,"sources":["logo.svg","components/sankey/NodeElement.js","components/sankey/Sankey.js","data/EDR-EII.csv","components/data-config/EDR_EII_normal.js","App.js","reportWebVitals.js","index.js"],"names":["styles","makeStyles","theme","freezing","pointerEvents","notFreezing","NodeElement","this","props","setfreezing","mouseOver","mouseLeave","className","children","other","onClick","onHandleClick","join","onMouseOver","bind","onMouseLeave","React","Component","Sankey","svgRef","createRef","padding","isAnimate","sankey","nodeWidth","nodeAlign","node","layer","nodePadding","y","d3","x","svg","g","color","_color","zoomFunc","on","event","select","attr","transform","getColorScale","_getColorScale_byName","state","margin","top","right","bottom","left","data","times","nodes","links","graph","width","scalezoom","height","widthView","heightView","current","call","translate","draw","prevProps","prevState","snapshot","N","renderSankey","isForceDone","empty","setState","linkSource","linkTarget","linkValue","nodeId","nodeGroup","linkColor","nodeGroups","freezeHandle","LS","d3_map","map","intern","LT","LV","undefined","Array","from","id","G","_nodes","_","i","element","_links","source","target","_id","JSON","stringify","replace","value","includes","nodeTitle","linkTitle","format","nodeLabel","widthG","heightG","length","index","extent","Tl","Tt","d","Lt","highlight","list","el","highlightJob","val","getValue","_key","colorBy","linkPath","classes","range","colorByName","_getColorScale_byValue","style","position","viewBox","ref","opacity","fill","_class","hide","onRelease","e","gradientUnits","x1","x2","x0","offset","stopColor","stroke","strokeWidth","linearScale","y0","y1","dy","textAnchor","paintOrder","horizontalSource","horizontalTarget","renderFargment","thick","valueOf","defaultProps","sankeyJustify","nodeLabelPadding","nodeStroke","nodeStrokeWidth","nodeStrokeOpacity","nodeStrokeLinejoin","linkStrokeOpacity","linkMixBlendMode","colors","marginTop","marginRight","marginBottom","marginLeft","withStyles","keyCol","numberCol","getData","csv","EDR_EII","handleNodeLink","nodesObj","linksObj","forEach","Object","keys","k","trim","_value","updateNodes","ci","updateLinks","col","isNaN","values","l1","l2","key","link","push","c","valueCol","useStyles","grow","flexGrow","App","useState","setNodes","setLinks","selectedValue","useEffect","then","onChangeValue","slice","l","sum","AppBar","Toolbar","Typography","variant","noWrap","component","sx","display","xs","sm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f289a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst styles = makeStyles(theme => ({\r\n    freezing: {\r\n        '&:not(.highlight)': {pointerEvents: 'none'}\r\n    },\r\n    notFreezing: {\r\n        '&:not(.highlight)' : {pointerEvents: 'auto'}\r\n    }\r\n}));\r\n\r\nclass NodeElement extends React.Component{\r\n    onHandleClick(){\r\n        const _freezing = this.props.freezing;\r\n        const freezing = !_freezing;\r\n        this.props.setfreezing(freezing)\r\n\r\n    }\r\n    onMouseOver(){\r\n        if(!this.props.freezing){\r\n            this.props.mouseOver()\r\n        }\r\n    }\r\n    onMouseLeave(){\r\n        if(!this.props.freezing){\r\n            this.props.mouseLeave()\r\n        }\r\n    }\r\n    render(){\r\n        const {children,className,setfreezing,mouseLeave,mouseOver,...other} = this.props;\r\n        const freezing = this.props.freezing;\r\n        return <g {...other} onClick={()=>this.onHandleClick()}\r\n                  className={[className,freezing?styles.freezing:styles.notFreezing].join(' ')}\r\n\r\n                  onMouseOver={(!freezing)&&this.onMouseOver.bind(this)}\r\n                  onMouseLeave={(!freezing)&&this.onMouseLeave.bind(this)}\r\n        >\r\n            {this.props.children}\r\n        </g>;\r\n    }\r\n}\r\nexport default NodeElement;\r\n","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/styles\";\r\nimport {sankey,sankeyJustify} from \"d3-sankey\"\r\nimport {ScaleOrdinal, ScaleSequential} from \"d3-scale\";\r\nimport {map as d3_map} from \"d3-array\"\r\nimport NodeElement from \"./NodeElement\";\r\n\r\nconst styles = theme => ({\r\n    svg: {\r\n        '& .fade': {\r\n            opacity: 0.2\r\n        },\r\n        '& .onhighlight .outer_node:not(.highlight)':\r\n            {opacity: 0.1},\r\n        '& .onhighlight .outer_node.highlight':\r\n            {\r\n                opacity: 1,\r\n                // '& path.main': {\r\n                //     opacity: 0\r\n                // }\r\n            }\r\n    }\r\n});\r\n\r\nclass Sankey extends React.Component {\r\n    svgRef = React.createRef();\r\n\r\n    widthView() {\r\n        return this.props.width * (this.state.scalezoom ?? 1)\r\n    }\r\n\r\n    heightView() {\r\n        return this.props.height * (this.state.scalezoom ?? 1)\r\n    }\r\n\r\n    widthG() {\r\n        return this.widthView() - (this.state.margin ?? {\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0\r\n        }).left - (this.state.margin ?? {top: 0, bottom: 0, left: 0, right: 0}).right\r\n    }\r\n\r\n    heightG() {\r\n        return this.heightView() - (this.state.margin ?? {\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0\r\n        }).top - (this.state.margin ?? {top: 0, bottom: 0, left: 0, right: 0}).bottom\r\n    }\r\n\r\n    padding = 0;\r\n    isAnimate = false;\r\n    sankey = sankey()\r\n        .nodeWidth(0.1)\r\n        // .nodeAlign(sankeyLeft)\r\n        .nodeAlign((node) => {\r\n            return node.layer;\r\n        })\r\n        .nodePadding(5)\r\n    y = d3.scalePoint()\r\n    x = d3.scaleTime()\r\n    svg = d3.select(null)\r\n    g = d3.select(null)\r\n    color = d3.scaleOrdinal(d3.schemeCategory10)\r\n    _color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            freezing: false,\r\n            margin: {top: 20, right: 20, bottom: 30, left: 100},\r\n            data: [],\r\n            times: [],\r\n            nodes: [],\r\n            links: [],\r\n            graph: {},\r\n        }\r\n    }\r\n\r\n    zoomFunc = d3.zoom().on(\"zoom\", (event) => {\r\n        this.svg.select('g.content').attr(\"transform\", event.transform);\r\n    });\r\n\r\n    componentDidMount() {\r\n        const {margin} = this.state;\r\n        this.svg = d3.select(this.svgRef.current);\r\n        this.g = this.svg.select('g.content');\r\n\r\n        this.svg.call(this.zoomFunc.bind(this)).call(this.zoomFunc.transform, d3.zoomIdentity.translate(margin.left, margin.top));\r\n        this.draw();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((this.props.nodes !== prevProps.nodes)||(this.props.links !== prevProps.links)) {\r\n            this.draw();\r\n        } else if ((this.props.width !== prevProps.width) || (this.props.height !== prevProps.height)) {\r\n            const {nodes,links,N} = this.state.graph;\r\n            this.renderSankey({nodes,links,N});\r\n        } else if ((this.state.isForceDone !== prevState.isForceDone) && this.state.isForceDone && !this.svg.empty()) {\r\n            const {margin} = this.state;\r\n            this.svg.call(this.zoomFunc.transform, d3.zoomIdentity.translate(margin.left, margin.top));\r\n        }\r\n    }\r\n\r\n    freezeHandle() {\r\n        const {freezing} = this.state;\r\n        if (freezing) {\r\n            this.setState({freezing: false});\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        let {freezing} = this.state;\r\n        const {linkSource,linkTarget,linkValue,nodeId,nodeGroup} = this.props;\r\n        let {nodes,links,linkColor,nodeGroups} = this.props;\r\n        if (freezing)\r\n            this.freezeHandle();\r\n\r\n        const LS = d3_map(links, linkSource).map(intern);\r\n        const LT = d3_map(links, linkTarget).map(intern);\r\n        const LV = d3_map(links, linkValue);\r\n        if (nodes === undefined) nodes = Array.from(d3.union(LS, LT), id => ({id}));\r\n        const N = d3_map(nodes, nodeId).map(intern);\r\n        const G = nodeGroup == null ? null : d3_map(nodes, nodeGroup).map(intern);\r\n\r\n        // Replace the input nodes and links with mutable objects for the simulation.\r\n        let _nodes = d3_map(nodes, (_, i) => ({id: N[i],element: _.element,layer:_.layer}));\r\n        let _links = d3_map(links, (_, i) => ({source: LS[i], target: LT[i],_id:'link_'+JSON.stringify([LS[i],LT[i]]).replace(/\\.|\\[|\\]| |\"|\\\\|:|-|,/g,''), value: LV[i],element: _.element}));\r\n\r\n        // Ignore a group-based linkColor option if no groups are specified.\r\n        if (!G && [\"source\", \"target\", \"source-target\"].includes(linkColor)) linkColor = \"currentColor\";\r\n\r\n        // Compute default domains.\r\n        if (G && nodeGroups === undefined) nodeGroups = G;\r\n        this.renderSankey({nodes:_nodes, links:_links,N});\r\n    }\r\n    renderSankey({nodes, links,N}){\r\n        const {nodeAlign,nodeWidth,nodePadding,nodeTitle,linkTitle} = this.props;\r\n        let {format,nodeLabel} = this.props;\r\n        const width = this.widthG();\r\n        const height = this.heightG();\r\n        if(nodes.length && links.length){\r\n            sankey()\r\n                .nodeId(({index: i}) => N[i])\r\n                .nodeAlign(nodeAlign)\r\n                .nodeWidth(nodeWidth)\r\n                .nodePadding(nodePadding)\r\n                .extent([[0, 0], [width, height]])\r\n                ({nodes, links});\r\n        }\r\n        // Compute titles and labels using layout nodes, so as to access aggregate values.\r\n        if (typeof format !== \"function\") format = d3.format(format);\r\n        const Tl = nodeLabel === undefined ? N : nodeLabel == null ? null : d3_map(nodes, nodeLabel);\r\n        const Tt = nodeTitle == null ? null : d3_map(nodes, d=>nodeTitle(format,d));\r\n        const Lt = linkTitle == null ? null : d3_map(links, d=>linkTitle(format,d));\r\n        this.setState({nodes,links,N,Tl,Tt,Lt,format,isForceDone:true})\r\n    }\r\n    onMouseOver(d, event) {\r\n        const list = {};\r\n        const highlight = {list, el: d, event};\r\n        highlight.list[d.source.id] = true;\r\n        this.setState({highlight})\r\n        if(this.props.mouseOver)\r\n            this.props.mouseOver(d);\r\n    }\r\n\r\n    onRelease() {\r\n        this.setState({highlight: undefined, highlightJob: undefined});\r\n        if (this.props.mouseLeave)\r\n            this.props.mouseLeave();\r\n    }\r\n\r\n    _getColorScale_byName(d) {\r\n        return this._color(d.id)\r\n    }\r\n\r\n    _getColorScale_byValue(d) {\r\n        const val = this.getValue(d);\r\n        return '' + this.color(val)\r\n    }\r\n\r\n    getValue(d) {\r\n        const _key = +(this.props.colorBy ?? '0');\r\n        return d.value[_key];\r\n    }\r\n\r\n    getColorScale = this._getColorScale_byName;\r\n\r\n    render() {\r\n        const {width, height,linkColor,linkPath,theme,classes} = this.props;\r\n        const {margin, nodes, links, isForceDone, highlight} = this.state;\r\n        const {x, y} = this;\r\n        y.range([0, this.heightG()]).padding(this.padding);\r\n        x.range([0, this.widthG()]);\r\n\r\n        this._color = this.props.colorByName ?? d3.scaleOrdinal([\"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"]);\r\n        this.color = this.props.color ?? this._color;\r\n        if (this.props.color) {\r\n            if (this.props.colorBy === 'name') {\r\n                this.getColorScale = this._getColorScale_byName;\r\n            } else\r\n                this.getColorScale = this._getColorScale_byValue;\r\n        }\r\n\r\n        return <div style={{width: width + ' px', height: height + ' px', position: 'relative'}}>\r\n            <svg width={width}\r\n                 height={height}\r\n                 viewBox={`0 0 ${width} ${height}`}\r\n                 ref={this.svgRef}\r\n                // style={{backgroundColor:'white'}}\r\n                 className={classes.svg}>\r\n                <defs>\r\n                </defs>\r\n                <rect className={\"pantarget\"} width={width} height={height} onClick={() => this.freezeHandle()}\r\n                      opacity=\"0\"/>\r\n                {this.state.freezing && <text fill={'black'}\r\n                                              transform={`translate(${this.widthG() / 2},20)`}>Click anywhere to\r\n                    release</text>}\r\n                {isForceDone ?\r\n                    <g className={'content' + (highlight ? ' onhighlight' : '')}>\r\n                        <g className={'background'} opacity={0.2}></g>\r\n                        <g className={'drawArea'}>\r\n                            <g className={'links'}>\r\n                                {links.map(d => <NodeElement\r\n                                    className={'outer_node element ' + (d._class??\"\") + (d.hide ? ' hide' : '') + ((highlight && (highlight.list[d.source.id] || highlight.list[d.target.id])) ? ' highlight' : '')}\r\n                                    key={d._id}\r\n                                    opacity={0.7} transform={'scale(1,1)'}\r\n                                    //style={{mixBlendMode:'multiply'}}\r\n                                    freezing={this.state.freezing} setfreezing={(freezing) => {\r\n                                    this.setState({freezing});\r\n                                    if (!freezing) {\r\n                                        this.onRelease()\r\n                                    }\r\n                                }}\r\n                                    mouseOver={(e) => this.onMouseOver(d, e)}\r\n                                    mouseLeave={() => this.onRelease()}>\r\n                                    {linkColor === \"source-target\" ?\r\n                                        <linearGradient id={d._id} gradientUnits={'userSpaceOnUse'} x1={d.source.x1}\r\n                                                        x2={d.target.x0}>\r\n                                            <stop offset={'0%'} stopColor={this.getColorScale(d.source)}/>\r\n                                            <stop offset={'100%'} stopColor={this.getColorScale(d.target)}/>\r\n                                        </linearGradient> : ''}\r\n                                    <path className={'main'}\r\n                                          fill={this.getColorScale === this._getColorScale_byName ? `url(#${d._id})` : this.getColorScale(d.target)}\r\n                                          stroke={`url(#${d._id})`}\r\n                                          strokeWidth={0.1} d={linkPath(d, this.props.linearScale)}/>\r\n                                    {/*{highlight&&(highlight.list[d.source.name]||highlight.list[d.target.name])?<g stroke={'white'} style={{pointerEvents:this.state.freezing?'all':'none'}}>{renderjob(d,this.props.lineaScale,this.props.maxPerUnit,this.getColorScale.bind(this), this.onMouseOverJob.bind(this), this.onReleaseJob.bind(this),this.getValue.bind(this),highlightJob)}</g>:''}*/}\r\n                                </NodeElement>)}\r\n                            </g>\r\n                            <g className={'nodes'}>\r\n                                {nodes.map(d => <g key={d.id}\r\n                                                   className={'outer_node element' + ((highlight && highlight.list[d.id]) ? ' highlight' : '')}\r\n                                                   transform={`translate(${d.x0},${d.y0})`}>\r\n                                    {/*<title></title>*/}\r\n                                    <text x={-6} y={((d.y1 + d.y0)??0) / 2 - d.y0} dy={\"0.35em\"} textAnchor={'end'}\r\n                                          paintOrder={'stroke'}\r\n                                          stroke={'white'} strokeWidth={3}\r\n                                          fill={'black'}\r\n                                    >{d.id }</text>\r\n                                    <rect height={(d.y1-d.y0)??0} width={(d.x1-d.x0)??0} fill={this._getColorScale_byName(d)}/>\r\n                                </g>)}\r\n                            </g>\r\n                        </g>\r\n                    </g> : ''\r\n                }\r\n            </svg>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction horizontalSource(d) {\r\n    return [d.source.x1, d.y0];\r\n}\r\n\r\nfunction horizontalTarget(d) {\r\n    return [d.target.x0, d.y1];\r\n}\r\nfunction str2class(str){\r\n    return 'l'+str.replace(/ |,/g,'_');\r\n}\r\nfunction renderjob(d,lineaScale=0,max,getColorScale,onMouseOverJob,onReleaseJob,getValue,highlightJob){\r\n    const source = horizontalSource(d);\r\n    const target = horizontalTarget(d);\r\n    const thick = d.width;\r\n\r\n    const width = (target[0]-source[0])/2;\r\n\r\n    const v = d3.sum(Object.values(d.byComp_t));\r\n    const scale = d3.scaleLinear().domain([0,v]).range([0,thick+lineaScale]);\r\n    let offest = -thick/2;\r\n    const _byComp_s={};\r\n    const _compS={};\r\n    Object.keys(d.sources).forEach(e=>{\r\n        _compS[e] = {};\r\n        d.sources[e].data.node_list.forEach((comp)=>{\r\n            if(d.source.comp[comp]){\r\n                _compS[e][comp] = Math.min(max,d.sources[e].data.node_list_obj[comp])\r\n                _byComp_s[comp] = (_byComp_s[comp]??0)+_compS[e][comp];\r\n            }\r\n        });\r\n    });\r\n    Object.keys(d.sources).forEach(e=> {\r\n        const compT={};\r\n        const compS= _compS[e];\r\n        let oldpos = Infinity;\r\n        // oldpos = d.sources[e].data.start_Index;\r\n        // let _past = undefined;\r\n        // d.source.relatedLinks.f\r\n        if(d.sources[e].data[d.source.layer-1]){\r\n            // d.sources[e].data.node_list.forEach((comp:string)=>{if(d.source.comp[comp]) compS[comp] = Math.min(max,d.sources[e].data.node_list_obj[comp])});\r\n            oldpos = d3.mean(d.sources[e].data[d.source.layer-1],(d)=>d.y) ?? Infinity;\r\n        }\r\n        const isEnd = d.source.layer===d.sources[e].data.finish_Index;\r\n        const value = d3.sum(Object.keys(compS),k=>(compS[k]/_byComp_s[k]) * d.byComp[k]);\r\n        const _thick = scale(value)??0;\r\n        d.sources[e].display = {compS,compT,isEnd,_thick,oldpos,data:d.sources[e].data}\r\n        if (!d.sources[e].data[d.source.layer])\r\n            d.sources[e].data[d.source.layer] = [d.sources[e].display]\r\n    });\r\n\r\n    return <>{Object.keys(d.sources).sort((a,b)=>d.sources[a].display.oldpos-d.sources[b].display.oldpos).map((e,ei)=>{\r\n        const {compS,isEnd,_thick,data}=d.sources[e].display;\r\n        offest += _thick;\r\n        d.sources[e].display.y = target[1]+offest-_thick/2;\r\n        const comp = {};\r\n        Object.keys(compS).forEach(c=>comp[c] = d.sources[e].data.node_list_obj[c]);\r\n        const _Data= {...d.source,comp};\r\n        const colorS= getColorScale(_Data);\r\n        const thick = _thick/2;\r\n        return <g key={d._id+'__'+e} onMouseOver={()=>onMouseOverJob({name:e,x:source[0],y:d.sources[e].display.y,time:d.source.time,layer:d.source.layer,value:getValue(_Data),data})} onMouseLeave={()=>onReleaseJob()} className={highlightJob?((highlightJob.el.name!==e) ? 'fade': ''):''}>\r\n            {isEnd?<linearGradient id={d._id+'__'+e} gradientUnits={'userSpaceOnUse'} x1={d.source.x1} x2={d.target.x0}>\r\n                <stop offset={'0%'} stopColor={colorS}/>\r\n                <stop offset={'100%'} stopColor={'black'}/>\r\n            </linearGradient>:''}\r\n            <path fill={isEnd?`url(#${d._id+'__'+e})`:colorS}\r\n                  strokeWidth={0.1} d={renderFargment([source[0],source[1]+offest-thick],[target[0],d.sources[e].display.y],width,thick)}/>\r\n        </g>})}</>\r\n}\r\nfunction linkPath(d, linearScale = 0) {\r\n    const source = horizontalSource(d);\r\n    const target = horizontalTarget(d);\r\n    const width = (target[0] - source[0]) / 2;\r\n    const thick = d.width / 2;\r\n\r\n    return renderFargment(source, target, width, thick, linearScale);\r\n    // return `M ${source[0]} ${source[1]-thick} C ${source[0]+width} ${source[1]-thick}, ${target[0]-width} ${target[1]-thick}, ${target[0]} ${target[1]-thick}\r\n    //         L ${target[0]} ${target[1]+deltathickT} C ${target[0]-width} ${target[1]+deltathickT}, ${source[0]+width} ${source[1]+deltathickS}, ${source[0]} ${source[1]+deltathickS} Z`;\r\n}\r\n\r\nfunction renderFargment(source, target, width, thick, linearScale = 0) {\r\n    thick = thick + linearScale;\r\n    return `M ${source[0]} ${source[1] - thick} C ${source[0] + width} ${source[1] - thick}, ${target[0] - width} ${target[1] - thick}, ${target[0]} ${target[1] - thick}\r\n            L ${target[0]} ${target[1] + thick} C ${target[0] - width} ${target[1] + thick}, ${source[0] + width} ${source[1] + thick}, ${source[0]} ${source[1] + thick} Z`;\r\n}\r\nfunction intern(value) {\r\n    return value !== null && typeof value === \"object\" ? value.valueOf() : value;\r\n}\r\nSankey.defaultProps = {\r\n    links:[],\r\n    nodes:[],\r\n    format : \",\", // a function or format specifier for values in titles\r\n    nodeId : d => d.id, // given d in nodes, returns a unique identifier (string)\r\n    nodeGroup:null, // given d in nodes, returns an (ordinal) value for color\r\n    nodeGroups:null, // an array of ordinal values representing the node groups\r\n    nodeLabel:null, // given d in (computed) nodes, text to label the associated rect\r\n    nodeTitle : (format,d) => `${d.id}\\n${format(d.value)}`, // given d in (computed) nodes, hover text\r\n    nodeAlign : sankeyJustify, // Sankey node alignment strategy\r\n    nodeWidth : 15, // width of node rects\r\n    nodePadding : 10, // vertical separation between adjacent nodes\r\n    nodeLabelPadding : 6, // horizontal separation between node and label\r\n    nodeStroke : \"currentColor\", // stroke around node rects\r\n    nodeStrokeWidth:null, // width of stroke around node rects, in pixels\r\n    nodeStrokeOpacity:null, // opacity of stroke around node rects\r\n    nodeStrokeLinejoin:null, // line join for stroke around node rects\r\n    linkSource : ({source}) => source, // given d in links, returns a node identifier string\r\n    linkTarget : ({target}) => target, // given d in links, returns a node identifier string\r\n    linkValue : ({value}) => value, // given d in links, returns the quantitative value\r\n    linkPath : linkPath, // given d in (computed) links, returns the SVG path\r\n    linkTitle : (format,d) => `${d.source.id} → ${d.target.id}\\n${format(d.value)}`, // given d in (computed) links\r\n    linkColor : \"source-target\", // source, target, source-target, or static color\r\n    linkStrokeOpacity : 0.5, // link stroke opacity\r\n    linkMixBlendMode : \"multiply\", // link blending mode\r\n    colors : d3.schemeTableau10, // array of colors\r\n    width : 640, // outer width, in pixels\r\n    height : 400, // outer height, in pixels\r\n    marginTop : 5, // top margin, in pixels\r\n    marginRight : 1, // right margin, in pixels\r\n    marginBottom : 5, // bottom margin, in pixels\r\n    marginLeft : 1, // left margin, in pixels\r\n};\r\n\r\nexport default withStyles(styles)(Sankey);\r\n","export default __webpack_public_path__ + \"static/media/EDR-EII.09484611.csv\";","import EDR_EII from \"../../data/EDR-EII.csv\"\r\nimport {csv} from 'd3';\r\n\r\nconst keyCol = ['Category','NFG','Lead','Status'];\r\nconst numberCol = ['M BTU/D','TIC','EII Reduction Estimate','CO2 Reduction (Metric Ton/yr)','Savings USD/YR'];\r\nexport const getData = csv(EDR_EII);\r\nexport function handleNodeLink(data){\r\n\r\n    let nodesObj = {};\r\n    let linksObj = {};\r\n    data.forEach(d=>{\r\n        Object.keys(d).forEach(k=>d[k]=d[k].trim());\r\n        d._value = {};\r\n        updateNodes(d,keyCol[0]);\r\n        for (let ci=1;ci<keyCol.length;ci++){\r\n            updateNodes(d,keyCol[ci]);\r\n            updateLinks(d,keyCol[ci-1],keyCol[ci]);\r\n        }\r\n        numberCol.forEach(col=>{\r\n            d._value[col] = (+d[col]);\r\n            if(isNaN(d._value[col]))\r\n                d._value[col] = 0;\r\n        })\r\n    });\r\n    const nodes = Object.values(nodesObj);\r\n    const links = Object.values(linksObj);\r\n    return {nodes,links};\r\n\r\n    function updateLinks(d,l1,l2){\r\n        if(d[l1] && d[l2]) {\r\n            const key = d[l1] + '_' + d[l2];\r\n            if (!linksObj[key]) {\r\n                let link = {source: d[l1], target: d[l2], element: []};\r\n                linksObj[key] = link;\r\n            }\r\n            linksObj[key].element.push(d);\r\n        }\r\n    }\r\n    function updateNodes(d,c){\r\n        if(d[c]) {\r\n            if (!nodesObj[d[c]]) {\r\n                let node = {id: d[c], element: []};\r\n                nodesObj[d[c]] = node;\r\n            }\r\n            nodesObj[d[c]].element.push(d);\r\n        }\r\n    }\r\n}\r\nexport const valueCol = numberCol\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Sankey from \"./components/sankey/Sankey\";\nimport React,{useEffect} from \"react\";\nimport {sum} from 'd3';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {makeStyles} from \"@material-ui/styles\";\n\n\nimport {getData,handleNodeLink,valueCol} from \"./components/data-config/EDR_EII_normal\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    }\n}))\nfunction App() {\n    const [nodes, setNodes] = React.useState([]);\n    const [links, setLinks] = React.useState([]);\n    const [selectedValue, setSelectedValue] = React.useState(valueCol[0]);\n    useEffect(() => {\n        getData.then(handleNodeLink).then(({nodes,links})=>{\n            onChangeValue(nodes,links)\n            setNodes(nodes);\n            setLinks(links);\n        })\n    },[getData]);\n    useEffect(()=>{\n        const _nodes = nodes.slice();\n        const _links = links.slice();\n        onChangeValue(_nodes,_links);\n        setNodes(_nodes);\n        setLinks(_links);\n    },[selectedValue])\n    const onChangeValue = (nodes,links)=>{\n        debugger\n        links.forEach(l=>{\n            l.value = sum(l.element,d=>d._value[selectedValue]);\n        });\n        nodes.forEach(l=>{\n            l.value = sum(l.element,d=>d._value[selectedValue]);\n        });\n        return {nodes,links};\n    }\n    const classes = useStyles();\n    return (\n        <div className=\"App\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\n                    >\n                        EDR-EII sankey by {selectedValue}\n                    </Typography>\n                    {/*<div className={classes.grow}/>*/}\n                    {/*<FormControl>*/}\n                    {/*    <InputLabel id=\"selected-label\">Visualizing</InputLabel>*/}\n                    {/*    <Select label={'Visualizing'} value={selectedValue} labelId=\"selected-label\" onChange={(event)=>{*/}\n                    {/*        setSelectedValue(event.target.value);*/}\n                    {/*        const _nodes = nodes.slice();*/}\n                    {/*        const _links = links.slice();*/}\n                    {/*        onChangeValue(_nodes,_links);*/}\n                    {/*        setNodes(_nodes);*/}\n                    {/*        setLinks(_links); }}>*/}\n                    {/*        {valueCol.map(v=><MenuItem key={v} value={v}>{v}</MenuItem>)}*/}\n                    {/*    </Select>*/}\n                    {/*</FormControl>*/}\n                    {/*<div className={classes.grow}/>*/}\n                </Toolbar>\n            </AppBar>\n            <Sankey nodes={nodes} links={links} width={1200} height={500}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}